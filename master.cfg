# -*- python -*-


c = BuildmasterConfig = {}

####### BUILDSLAVES


from buildbot.buildslave import BuildSlave

# c['slaves'] = [BuildSlave("V8", "PassWord", max_builds=2, notify_on_missing="klheisey@gmail.com")]
c['slaves'] = [BuildSlave("V8", "PassWord", max_builds=2, notify_on_missing="rahaman@gmail.com")]
c['slavePortnum'] = 9999

####### CHANGESOURCES

from buildbot.changes.svnpoller import SVNPoller

c['change_source'] = [SVNPoller("https://svn.mcs.anl.gov/repos/nek5",)]

####### SCHEDULERS

from buildbot.scheduler import Scheduler
from buildbot.scheduler import Nightly
from buildbot.scheduler import Try_Userpass


sfull = Scheduler(name="all", branch=None, treeStableTimer=10*60, builderNames=["Nek V8"])
#sTry  = Scheduler(name="try", branch=None, port=5555, builderNames=["Test"], userpass=[('fischer','fischer'),('heisey','heisey')])



c['schedulers'] = []
c['schedulers'].append(sfull)
#c['schedulers'].append(sTry)

####### BUILDERS

from buildbot.process import factory
from buildbot.steps import source, shell
from buildbot.process.buildstep import LogLineObserver
from NekCustomSteps import NekStepP, NekStepS

f2 = factory.BuildFactory()
f2.addStep(source.SVN(mode='clobber', svnurl = "https://svn.mcs.anl.gov/repos/nek5",workdir="build/nek5_svn"))
f2.addStep(shell.ShellCommand(workdir="build/nek5_svn/tests", command=["./BB_RunTest"], timeout=3600))

f2.addStep(NekStepP(workdir = "build/nek5_svn/tests/PGI",timeout=600,descriptionDone=["PGI","Analysis"]))
f2.addStep(NekStepS(workdir = "build/nek5_svn/tests/GNU",timeout=600,descriptionDone=["GNU","Analysis"]))
f2.addStep(NekStepS(workdir = "build/nek5_svn/tests/INT",timeout=600,descriptionDone=["INT","Analysis"]))

f2.addStep(shell.ShellCommand(command=["./all_dead"],description=["clean up"]))
f2.addStep(shell.ShellCommand(command=["doxygen","DoxyfileNek"],description=["doxygen"]))
f2.addStep(shell.ShellCommand(workdir="build/nek5_svn",command=["chmod","uga+rx","-R","tests/"],description=["chmod"]))

b1 = {'name': "Nek V8", 'slavenames': ["V8"], 'builddir': "nek", 'factory': f2, }

c['builders'] = [b1]


####### STATUS TARGETS

c['status'] = []

from buildbot.status import html
from buildbot.status.web.auth import BasicAuth
users = [('heisey','heisey'),
        ('fischer','fischer'),
        ('rahaman','rahaman'),
        ('obabko','obabko'),
        ('merzari','merzari'),
        ('marin','marin')]
#This is to enable SSL for using auth - tested good
#c['status'].append(html.WebStatus(http_port="ssl:8090:privateKey=/homes/buildbot/mykey.pem:certKey=/homes/buildbot/cert.pem", allowForce=False))
c['status'].append(html.WebStatus(http_port=8090, allowForce=True, auth=BasicAuth(users)))

from buildbot.status.mail import MailNotifier

mn = MailNotifier(fromaddr="buildbot@mcs.anl.gov",
                  lookup="mcs.anl.gov",
#                 extraRecipients=['klheisey@gmail.com'],
#                 extraRecipients=['klheisey@gmail.com','fischer@mcs.anl.gov'],
                  extraRecipients=['rahaman@gmail.com','obabko@mcs.anl.gov','emerzari@anl.gov','oanam@mcs.anl.gov','fischerp@illinois.edu'],
                  subject="Nek Buildbot Information",
                  mode='all')
c['status'].append(mn)

####### PROJECT IDENTITY

c['projectName'] = "NEK"
c['projectURL'] = "http://trac.mcs.anl.gov/projects/SHARP"
c['buildbotURL'] = "http://buildbot.mcs.anl.gov:8090/"
